Sub CheckSTEWordsStructuredTechnicalEnglish()
    Dim doc As Document
    Dim incorrectWord As Variant
    Dim replacementWord As String
    Dim correctionsDict As Object
    Dim findRange As Range
    Dim summaryFile As Object
    Dim fso As Object
    Dim para As Paragraph
    Dim wordRange As Range
    Dim excelApp As Object, workbook As Object, sheet As Object
    Dim row As Long, lastRow As Long
    Dim summaryFileName As String
    Dim excelFilePath As String
    
    ' Set the active document
    Set doc = ActiveDocument
    
    ' Disable screen updating for performance
    Application.ScreenUpdating = False
    Application.StatusBar = "Starting grammar check..."
    
    ' Specify the Excel file path containing corrections
    excelFilePath = "C:\path\to\your\correction_file.xlsx" ' Update this path
    
    ' Initialize the dictionary
    Set correctionsDict = CreateObject("Scripting.Dictionary")

    ' Open Excel
    Set excelApp = CreateObject("Excel.Application")
    excelApp.Visible = False
    Set workbook = excelApp.Workbooks.Open(excelFilePath)
    Set sheet = workbook.Sheets(1)
    
    ' Find the last row in the Excel sheet
    lastRow = sheet.Cells(sheet.Rows.Count, 1).End(-4162).Row ' -4162 is xlUp
    
    ' Load corrections from Excel into the dictionary
    For row = 2 To lastRow
        incorrectWord = Trim(LCase(sheet.Cells(row, 1).Value)) ' Trim and convert to lowercase
        replacementWord = Trim(sheet.Cells(row, 2).Value) ' Trim the replacement word
        
        ' Check if the key already exists
        If Not correctionsDict.Exists(incorrectWord) Then
            correctionsDict.Add incorrectWord, replacementWord
        End If
    Next row
    
    ' Close Excel
    workbook.Close False
    excelApp.Quit
    Set excelApp = Nothing
    
    ' Prepare the summary file
    summaryFileName = Left(doc.FullName, Len(doc.FullName) - 5) & "_summary.txt"
    Set fso = CreateObject("Scripting.FileSystemObject")
    Set summaryFile = fso.CreateTextFile(summaryFileName, True)

    ' Loop through paragraphs and words in the document
    For Each para In doc.Paragraphs
        Set findRange = para.Range
        Application.StatusBar = "Processing paragraph " & para.Index & " of " & doc.Paragraphs.Count

        ' Loop through each word in the paragraph
        For Each wordRange In findRange.Words
            ' Check if the word is bold
            If wordRange.Font.Bold = True Then
                ' Remove leading/trailing spaces and convert to lowercase for comparison
                Dim cleanedWord As String
                cleanedWord = Trim(LCase(wordRange.Text))
                
                ' Check if the word exists in the corrections dictionary
                If correctionsDict.Exists(cleanedWord) Then
                    ' Replace the word with the corrected version
                    wordRange.Text = wordRange.Text & " (" & correctionsDict(cleanedWord) & ")"
                    
                    ' Log the change in the summary file
                    summaryFile.WriteLine "Original Word: " & cleanedWord
                    summaryFile.WriteLine "Replaced With: " & correctionsDict(cleanedWord)
                    summaryFile.WriteLine "=================================================="
                End If
            End If
        Next wordRange
        ' Allow Word to process other events
        DoEvents
    Next para
    
    ' Cleanup
    summaryFile.Close
    Application.ScreenUpdating = True
    Application.StatusBar = "Grammar check completed."
    
    ' Display completion message
    MsgBox "Grammar check completed. Summary saved as: " & summaryFileName, vbInformation
End Sub
