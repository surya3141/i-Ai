Sub CheckSTEWordCheck(userEmail As String)

    Dim doc As Document
    Dim incorrectWord As Variant
    Dim replacementWord As String
    Dim correctionsDict As Object
    Dim wordRange As Range
    Dim excelApp As Object, workbook As Object, sheet As Object
    Dim row As Long, lastRow As Long
    Dim excelFilePath As String
    Dim selectedRange As Range
    Dim updateCount As Long
    Dim logFilePath As String
    Dim summaryFilePath As String
    Dim userName As String
    Dim fileName As String
    Dim summaryVersion As Long

    ' Ensure there is a selection
    If Selection.Type = wdNoSelection Then
        MsgBox "Please select the text to be checked.", vbExclamation
        Exit Sub
    End If

    ' Set the active document and selected range
    Set doc = ActiveDocument
    Set selectedRange = Selection.Range

    ' Specify the Excel file path containing corrections
    excelFilePath = "C:\YourDirectory\grammatical_corrections.xlsx"

    ' Initialize the dictionary
    Set correctionsDict = CreateObject("Scripting.Dictionary")

    ' Open Excel
    On Error Resume Next
    Set excelApp = CreateObject("Excel.Application")

    If excelApp Is Nothing Then
        MsgBox "Excel could not be started. Make sure Excel is installed.", vbCritical
        Exit Sub
    End If

    excelApp.Visible = False
    Set workbook = excelApp.Workbooks.Open(excelFilePath)
    On Error GoTo 0

    If workbook Is Nothing Then
        MsgBox "The specified Excel file could not be opened. Please check the file path.", vbCritical
        excelApp.Quit
        Set excelApp = Nothing
        Exit Sub
    End If

    Set sheet = workbook.Sheets(1)
    lastRow = sheet.Cells(sheet.Rows.Count, 1).End(-4162).Row ' -4162 is xlUp

    ' Load corrections into the dictionary
    For row = 2 To lastRow
        incorrectWord = Trim(LCase(sheet.Cells(row, 1).Value))
        replacementWord = Trim(sheet.Cells(row, 2).Value)
        If Not correctionsDict.Exists(incorrectWord) Then
            correctionsDict.Add incorrectWord, replacementWord
        End If
    Next row

    ' Close Excel
    workbook.Close False
    excelApp.Quit
    Set excelApp = Nothing

    ' Initialize counters
    updateCount = 0
    userName = Environ("USERNAME") ' Get the Windows username
    fileName = doc.Name ' Get the document name

    ' Initialize log file path
    logFilePath = "C:\YourDirectory\global_log.txt"
    summaryFilePath = doc.Path & "\summary_v1.txt" ' Adjust path for summary file

    ' Main loop for grammar check
    For Each wordRange In selectedRange.Words
        ' Process only words that are not underlined
        If wordRange.Font.Underline = wdUnderlineNone Then
            Dim coreWord As String
            coreWord = Trim(LCase(wordRange.Text))

            ' Check if word is in corrections dictionary and hasn't already been corrected
            If correctionsDict.Exists(coreWord) Then
                Dim originalText As String
                originalText = Trim(wordRange.Text)

                ' Replace text and apply color formatting
                wordRange.Text = originalText & " (" & correctionsDict(coreWord) & ")"

                ' Add a trailing space if needed
                If Not Right(wordRange.Text, 1) = " " Then
                    wordRange.Text = wordRange.Text & " "
                End If

                ' Apply color: original word in yellow, correction in green
                wordRange.Font.Shading.BackgroundPatternColor = wdColorYellow ' Original word in yellow
                wordRange.MoveEnd wdCharacter, -Len(correctionsDict(coreWord)) - 3 ' Moves to the correction
                wordRange.Font.Shading.BackgroundPatternColor = wdColorBrightGreen ' Suggested word in green

                ' Log the correction
                LogCorrection userName, fileName, originalText, correctionsDict(coreWord), userEmail

                ' Increment counter and allow Word to process events
                updateCount = updateCount + 1
                If updateCount Mod 10 = 0 Then DoEvents
            End If
        End If
    Next wordRange

    ' Final cleanup
    Application.ScreenUpdating = True
    Application.StatusBar = "Grammar check completed."

    ' Create/Update Summary File
    UpdateSummaryFile summaryFilePath, userName, fileName

    ' Display completion message
    MsgBox "STE tool has been run on this document.", vbInformation

End Sub

Sub LogCorrection(userName As String, fileName As String, originalWord As String, suggestedWord As String, userEmail As String)
    Dim logFilePath As String
    logFilePath = "C:\YourDirectory\global_log.txt" ' Update this to your desired local log file path

    Open logFilePath For Append As #1
    Print #1, "Date: " & Now & " | User: " & userName & " | Email: " & userEmail & " | Document: " & fileName & " | Corrected Word: " & originalWord & " | Suggested Word: " & suggestedWord
    Close #1
End Sub

Sub UpdateSummaryFile(summaryFilePath As String, userName As String, fileName As String)
    Dim summaryVersion As Long
    Dim summaryFile As String
    Dim fso As Object
    Set fso = CreateObject("Scripting.FileSystemObject")

    ' Determine the next summary version number
    summaryVersion = 1
    Do While fso.FileExists(summaryFilePath)
        summaryVersion = summaryVersion + 1
        summaryFilePath = Left(summaryFilePath, InStrRev(summaryFilePath, "_") - 1) & "_v" & summaryVersion & ".txt"
    Loop

    ' Create or append to the summary file
    Open summaryFilePath For Append As #1
    Print #1, "Date: " & Now & " | User: " & userName & " | Document: " & fileName
    Close #1
End Sub